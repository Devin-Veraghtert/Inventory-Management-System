@page "/addinventory"

@inject IAddInventoryUseCase AddInventoryUseCase

<h3>Add Inventory</h3>
<br />

<EditForm Model="inventory" FormName="formInventory" OnValidSubmit="Save">
    <DataAnnotationsValidator />

    <div class="form-group">
        <label for="name">Inventory Name</label>
        <InputText id="name" class="form-control" @bind-Value="inventory.InventoryName" />
        <ValidationMessage For="() => inventory.InventoryName" />
    </div>

    <div class="form-group">
        <label for="quantity">Quantity</label>
        <InputNumber id="quantity" class="form-control" @bind-Value="inventory.Quantity" />
        <ValidationMessage For="() => inventory.Quantity" />
    </div>

    <div class="form-group">
        <label for="price">Price</label>
        <InputNumber id="price" class="form-control" @bind-Value="inventory.Price" />
        <ValidationMessage For="() => inventory.Price" />
    </div>

    <br />

    <button type="submit" class="btn btn-primary">Save</button>
</EditForm>

@code {
    [SupplyParameterFromForm]
    private Inventory inventory { get; set; } = new Inventory();

    private async void Save()
    {
       await AddInventoryUseCase.ExecuteAsync(inventory);
    }
}
